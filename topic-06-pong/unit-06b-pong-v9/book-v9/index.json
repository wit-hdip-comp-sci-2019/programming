


  {
  
  
    "properties" : {},
  
  "type" : "lab",
  "title" : "Lab-06b-v9",
  "img" : "img/main.png",
  "videoid" : "none",
  "objectives" : "<p>PongGame V9.0</p>",
  "folder" : "book-v9",
  "link" : "index.html",
  "los": [
   ]
,
  "chapters" : [
  
    {
    "title": "#Objectives",
    "shortTitle": "Lab-06b-v9",
    "contentMd" : "#Objectives\n\nPongGame V9.0 \n"
    },
  
    {
    "title": "#Game of Pong - V9.0",
    "shortTitle": "V9",
    "contentMd" : "#Game of Pong - V9.0\n\nIn this lab, you will work on PongGameV9_0.\n\nWe will refactor PongGameV8_0 so that it uses the Pythagorean Theorem version for collision detection.\n\nOpen your latest version of PongGame version 8. If you wish, you can use this solution [here](archives/PongGameV8_0.zip).\n\nSave this as PongGameV9_0.\n\n\n##hitPaddle method\n\nIn your PongGameV9_0 class, you will see a **hitPaddle** method.  \n\nReplace it with this code i.e. the pythagoreas version of collision detection:\n\n~~~java\n//method returns true if the ball and paddle overlap (i.e. ball is hit), false otherwise.\n\nboolean hitPaddle(Paddle paddle, Ball ball)\n{\n   //These variables measure the magnitude of the gap between the paddle and the ball.  \n   float circleDistanceX = abs(ball.getXCoord() - paddle.getXCoord() - paddle.getPaddleWidth()/2);\n   float circleDistanceY = abs(ball.getYCoord() - paddle.getYCoord() - paddle.getPaddleHeight()/2);\n   \n   if (circleDistanceX > (paddle.getPaddleWidth()/2  + ball.getDiameter()/2)) { return false; }\n   if (circleDistanceY > (paddle.getPaddleHeight()/2 + ball.getDiameter()/2)) { return false; }\n\n   if (circleDistanceX <= (paddle.getPaddleWidth()/2))  { \n      return true;\n   }\n   if (circleDistanceY <= (paddle.getPaddleHeight()/2)) { \n      return true;\n   } \n   \n   float cornerDistance = pow(circleDistanceX - paddle.getPaddleWidth()/2,  2) +\n                          pow(circleDistanceY - paddle.getPaddleHeight()/2, 2);\n                    \n   if (cornerDistance <= pow(ball.getDiameter()/2, 2)){\n      return true;\n   } \n   else{\n      return false;\n   }\n}\n~~~\n\nRun your game to ensure that the collision detection works correctly. \n\n\n##Solution\n\nIf your code is not working, the solution can be found [here](archives/PongGameV9_0.zip). \n\n"
    }
  
  ]
  }

