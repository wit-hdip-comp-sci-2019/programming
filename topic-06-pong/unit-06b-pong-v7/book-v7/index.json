{"type":"lab","chapters":[{"title":"#Objectives","shortTitle":"Lab-06b-v7","contentMd":"#Objectives\n\nPongGame V7.0 "},{"title":"#Game of Pong - V7.0","shortTitle":"V7","contentMd":"#Game of Pong - V7.0\n\nIn this version of the game, we add methods that calculate the highest and lowest score in the player's score array as well as calculating the average score over all the scores.\n\nOpen your latest version of PongGame Version 6. If you are not confident that it is working, you can use this solution [here](archives/PongGameV6_0.zip). \n\nSave this as PongGameV7_0. Now, make changes to this work. \n\n\n##Player Class\n\nWe will now add three methods to the Player class:\n\n- lowestScore()\n\n- highestScore()\n\n- averageScore()\n    \n   \n~~~java\n  //method returns the highest score stored in the scores array   \n  //if there is only one element in the scores array, this value is \n  //returned as the highest\n  public int highestScore()\n  {\n     int highestScore = scores[0];\n     for(int i = 1; i < count; i++){\n         if (scores[i] > highestScore){\n            highestScore = scores[i];\n         }        \n     }   \n     return highestScore;\n  }\n\n  //method returns the lowest score stored in the scores array   \n  //if there is only one element in the scores array, this value \n  //is returned as the lowest\n  public int lowestScore()\n  {\n     int lowestScore = scores[0] ;\n     for(int i = 1; i < count; i++){\n         if (scores[i] < lowestScore){\n            lowestScore = scores[i];\n         }        \n     }   \n     return lowestScore;\n  }\n\n  //method calculates and returns the average of all the high \n  //scores stored in the scores array   \n  public int averageScore()\n  {\n     int total = 0;\n     for(int i = 0; i < count; i++){\n        total = total +  scores[i];        \n     }   \n     return total / count;\n  }\n  \n~~~\n\nEnsure that you understand the code you have written in. For example:\n\n- What is the function of the variable highestScore in the highestScore() method?\n\n- Why is the variable highestScore local? \n\n- Is this appropriate?    \n\n\n##Changes in the PongGame class\n\nWe don't make any changes to how the game works in this version update. We only give out more information about what happened during the game. \n\nSo we simply change the tournamentOver() method to report on the three new values that our new methods calculate. So our updated tournamentOver() method will now be:\n\n~~~java\n//method displays the player information, high scores and \n//statistics, before exiting the program.\nvoid tournamentOver()\n{\n   println(\"Game Over!\\n\");\n   println(player.getPlayerName() + \", your tournament is over!\\n\"\n                                  + \"Number of games played: \" + numberOfGamesPlayed\n                                  + \"\\n\\n\"                     + player.toString()\n                                  + \"\\n\\nHighest Score: \"      + player.highestScore()\n                                  +   \"\\nLowest Score:  \"      + player.lowestScore()\n                                  +   \"\\nAverage Score: \"      + player.averageScore());\n   exit();          \n}\n~~~\n\nYou should be able to now play the game and get the extra information reported at the end of the tournament. The information will be sent to the console. Next we will redirect this information to the dialog boxes via JOptionPane. \n\nSave your work.\n\nMake sure you understand the code before moving onto PongGameV8_0.\n\n\n##Solution\n\nIf your code is not working, the solution can be found [here](archives/PongGameV7_0.zip).\n\n"}]}