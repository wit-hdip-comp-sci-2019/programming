{"type":"lab","chapters":[{"title":"#Objectives","shortTitle":"Lab-10b","contentMd":"#Objectives\n\nXML 路 Exception Handling 路 Validate User Input 路 ShopV5.0 路 DVD3.0\n\n"},{"title":"#Shop V5.0 - Exceptions ","shortTitle":"03","contentMd":"#Shop V5.0 - Exceptions \n\nIn this practical, you will continue working on Shop V5.0. \n\n##Adding Exception Handling\n\nIn the Driver class, put a try and catch block around each potential read of data that could throw an exception (nextLine() and next() are ok).\n\nRevisit your lecture notes on this topic if you need guidance.\n\nRun your program and test your user input to ensure that your exception handling is correctly implemented e.g. enter String data when a double or int is expected.   \n\n\n"},{"title":"#Menu Driven DVD Specification (Phase 3)","shortTitle":"04","contentMd":"#Menu Driven DVD Specification (Phase 3)\n\nIn this practical, you will create a new project and copy in the code from **DVDLibraryV2.0**.  You will then extend the code to allow the user to save the DVDs to an XML file and to load the DVDs from an XML file. \n\n- Create a new project called **DVDLibraryV3.0**.\n\n- In your Windows Explorer / Mac Finder, copy the **src** java files from **DVDLibraryV2.0** to the **src** folder in your new project,  **DVDLibraryV3.0**.\n\n- NOTE:  a copy of the completed **DVDLibraryV2.0** [is available here](archives/DVDLibraryV2.0.zip).\n\n\n##Setting up the Component for Serializing\n\nDownload the following XStream jar file and incorporate it into your DVDLibraryV3.0 project:\n\n- [xstream-1.4.10.jar](../book/archives/xstream-1.4.10.jar) \n\n\n##Library class\n\nIn the Library class:\n\n- add a load() method that throws an Exception.  This method should read the contents of the dvd.xml file into the ArrayList of DVDs.\n\n- add a save() method that throws an Exception.  This method should write the contents of the ArrayList of DVDs to the dvd.xml file.\n\n\n##Driver class - Save DVDs\n\nAdd a fifth option to the menu:  *5) Save DVDs to dvds.xml.*\n\nAdd a case 5 to the switch statement.  Then, within a try and catch block, call the save() method you wrote in the Library class.\n\n\n##Driver class - Load DVDs\n\nAdd a sixth option to the menu:  *6) Load DVDs from dvds.xml.*\n\nAdd a case 6 to the switch statement.  Then, within a try and catch block, call the load() method you wrote in the Library class.\n\n\n## Test your code\n\nRun the project.\n\n- Test option 5 and make sure that your DVDs are stored to an XML file.  \n\n- You should have a new XML file that looks something like this:\n\n~~~XML\n<object-stream>\n  <list>\n    <DVD>\n      <title>The Matrix</title>\n    </DVD>\n    <DVD>\n      <title>Sicario</title>\n    </DVD>\n    <DVD>\n      <title>The Grinch</title>\n    </DVD>\n  </list>\n</object-stream>\n~~~\n\nExit your application and run it again.\n\n- Test option 6 and make sure that your DVDs are loaded back into your dvd ArrayList correctly.\n\n\n##Exceptions\n\nEach time you read in an int in the Driver class, add a try and catch so that your program won't crash if you enter a non-numeric value.\n\n"},{"title":"#Solutions","shortTitle":"Solutions","contentMd":"#Solutions\n\nThe solution to the ShopV5.0 exercise [is here](archives/ShopV5.0.zip).\n\nThe solution to DVD phase 3 [is here](archives/DVDLibraryV3.0.zip).\n\n\n"}]}