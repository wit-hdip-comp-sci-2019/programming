


  {
  
  
    "properties" : {"highlightstyle":"railscasts","disable":false,"slack":"https://wit-hdip-comp-sci-19.slack.com/messages/CEN2114F4","moodle":"https://moodle.wit.ie/course/view.php?id=132121","youtube":"https://www.youtube.com/channel/UCOJZMc0BQDXDljzdcxP2EDw","parent":"https://wit-hdip-comp-sci-2019.github.io/","courseurl":"http://wit-hdip-comp-sci-2019.github.io/programming/","credits":"Colm Dunphy, Johnathan Brazil, Patrick Felicia,  WIT","license":"Unless otherwise stated, this work is licensed under a <a rel=\"license\" href=\"http://creativecommons.org/licenses/by/4.0/\">Creative Commons Attribution 4.0 International License</a>.","faPanelicon":"fas fa-cogs","faColour":"#64dd17","crest":"crestwit.jpg","cresturl":"https://www.wit.ie/courses/school/science/department_of_computing_maths_physics/hdipcomputerscience2yearparttime","ects":10,"basecourseurl":"wit-hdip-comp-sci-2019.github.io/programming/"},
  
  "type" : "lab",
  "title" : "Assignment-2",
  "img" : "img/main.jpg",
  "videoid" : "none",
  "objectives" : "<p>This is your second assignment that will contribute to your grade for the semester.  It is worth 30% of your overall grade.  </p>",
  "folder" : "book-assignment-2",
  "link" : "index.html",
  "los": [
   ]
,
  "chapters" : [
  
    {
    "title": "# Assignment 2",
    "shortTitle": "Assignment-2",
    "contentMd" : "# Assignment 2\n\nThis is your second assignment that will contribute to your grade for the semester.  It is worth 30% of your overall grade.  \n\nYou are asked to write a **game** (or a more involved working animation).\n"
    },
  
    {
    "title": "#Assignment 2",
    "shortTitle": "Advice",
    "contentMd" : "#Assignment 2\n\nThis will detail, for your second assignment:\n\n - **Specification:** What is expected from your code.\n - **Marking:** The marking scheme for the assignment.\n - **Submission:** Submission details including submission date.\n\n \n#Assignment Advice\n\nRead the specification carefully.\n\nStart working on the assignment early.\n\nWhen you think you are ready to submit, perform the following **CHECKLIST** : \n\n- Ensure you have covered **all the elements** mentioned in the marking scheme.\n\n- Ensure specifically that your **indentation** is consistent. \n\n- Write **comments** to explain what your game does/ how it works, particularly how tricky code works and what it does.\n\n- Ensure that your **name, student number and description** of what your code does is written at the top of the main sketch file.\n\n- Ensure that you have **named the submission (zip) file** according to the prescribed naming convention. \n\n\n\n"
    },
  
    {
    "title": "#Specification",
    "shortTitle": "Specification",
    "contentMd" : "#Specification\n\nIn your second assignment, you are asked to write code to produce a **game** ( or a more complex dynamic animation) of your choice with user interaction of your choice in Processing (Java).\n\nThe aim of the assignment is for you to demonstrate your understanding of all the structures seen so far.  Specifically, you are asked to include the following:\n\n- **At least one user-defined CLASS**, adhering to *encapsulation* rules, complete with:\n  \n    - **fields**\n    - **constructors**\n    - **getters**\n    - **setters**\n    - **other methods**\n\n\n- The usual Processing classes containing the draw(), setup(), etc.  This class must use your user-defined class(es) in an appropriate manner.\n\n- Use of **selection** (if) and **iteration** (loops).\n\n- Use of **primitive arrays**.\n\n- Use of **object arrays**.\n\n\n##A note on complexity\n\nThe complexity of the entire code is important, i.e. the more complex the code, the more marks you will achieve. (see marking scheme).\n\nThe **Pong game v8** that we covered in lectures and labs is an example of excellent marks for complexity. \n\n\n##A Suggestion\nPong has many elements common to most games. Build your own unique game. You cannot submit Pong!\n\nYou must include **specific references** to games, books, or websites that influence your assignment.\n\nWhen submitting it is important that you explicitly highlight how you've met each part of the spec. \n\nYou may develop Assignment 1 further but it must be refactored according to the A2 specification. Additionally, you will need to highlight this refactoring and the additional features built this time. \n\n**NOTE: You will not receive marks twice for submitting the same work, only the differences**\n"
    },
  
    {
    "title": "#Marking Scheme",
    "shortTitle": "Marking",
    "contentMd" : "#Marking Scheme\n\nThere are two components to your overall mark:\n\n- Structure of code\n- Complexity of code\n\n*Please read below regarding interviews.*\n\n\n##Structure of Code  (100 Marks)\n\n\nPart | Description | Marks     \n-----|-------------|-----------|\nA | Inclusion of completed Readme, Reflection, and Video | **(5 marks)**\nB | Comments, indentation, naming, structure of code, etc. | **(5 marks)**\nC | Use of standard programming control contructs (if, loop) | **(5 marks)**\nD | Working game with inclusion of bespoke methods in the main sketch. | **(5 marks)**\nE | **User-defined class** (at least one):\nE1 |\t- With appropriate fields, constructors, getters, setters | **(10 marks)**\nE2 | \t- Class bespoke methods | **(15 marks)**\nE3 |\t- The user-defined class(es) are used in an appropriate manner | **(15 marks)**\nF | **Data structure:** | \nF1 |\t- Use of a data structure to store information i.e. *array* |  **(20 marks)**\nF2 |\t- Calculations performed on the information stored | **(20 marks)**\n\n\n##Complexity of code (10 Marks)\n\nThis is a mark out of 10 based on the complexity of the problem solved/code. So you will get more marks if the animation is more involved than one that is very simple. Please do not confuse an elegant solution of a complex problem with a simple problem.\n\n \n##How is the final mark calculated?\n \n The final mark is calculated by multiplying the two component marks and dividing by 10. This means that complexity is a multiplier so a weakness in that will negatively affect your grade.\n\n Example:\n \n - Structure of code = 80/100\n - Complexity of code = 9/10\n - Final mark = (80 by 9)/10 = 72%\n\n\n##Interview (and subsequent grade calculation)\n\nPlease note that we reserve the right to interview you on your code. You *may* be asked (for example) to explain:\n\n- Any of the code.\n- How you decided on your animation.\n- How you developed your animation; where did you start first, etc?\n- Anything else.\n\nIf we need to interview you on your work, you will be given a mark out of 10 for the interview.  This mark will be a multiplier of your overall grade.  For example:\n \n - Structure of code = 80/100\n - Complexity of code = 9/10\n - Interview = 8/10\n - Final mark = (80 by 9 by 8)/100 = 57.6%\n"
    },
  
    {
    "title": "#Handup of submission",
    "shortTitle": "Submission",
    "contentMd" : "#Handup of submission\n\n##Date\n\nThe submission is due ***Sunday 24 March 2019, 11.59PM***.\n\nA 15% penalty per day will be applied there after (unless mitigating circumstances, with supporting documentation, is supplied). Feedback will also be delayed on late submissions.\n\n\n##Where \n\nThe dropbox is available in the 'Assignments' section in Moodle.\n\n\n##File naming convention\n\nYour files should be contained in a **folder** named according to the rule: \n\n- *First name* + *Second name*, e.g. Donald Duck's folder would be called *DonaldDuck*. \n\nYou should then compress (zip) the **folder** that contains all the sketches used to develop your assignment; this is the file that you should submit.\n\n\n##Readme tab\n\nYou must include a readme tab in the sketch.  The contents of this tab should be of the following format:\n\n~~~\n/*\nName : \nStudent Number:\n\nBrief description of the game developed:\n\nJustification of spec:\n\nKnown bugs/problems:\n\nAny sources referred to during the development of the assignment (be precise and specific with references) {there no need to reference lecture/lab materials}:\n\n*/\n~~~\n\nIf you hand up a more advanced version of your first assignment, you will need to explicitly state the addtional features added, in the description section above and also explicitly state the difference between the first version that you handed up, and this version.\n\n##Reflection tab\nYou must carry out your own self assessment on your work and show this by including a **reflection** tab in the sketch.  Use the rubric to reflect on the work you've done and assess yourself accordingly.\n\nDetail for each row of the rubric, examples that you used in your code, what they are used for, and line numbers where they can be found.\n\n~~~\n/* Reflection\n\nName : \n\nStudent Number:\n\nLink to Video:\t\t\t\te.g. https://youtu.be/DvnEIN8FIgA\n\n\nPart A - Mark (X /5)\n-----------------------------\n\nIncludsion of completed Readme and Reflection, and Video\n\n<just a mark needed here>\n\n\nPart B - Mark (X /5)\n-----------------------------\n\nComments, indentation, naming, structure of code, etc.\n\n<just a mark needed here>\n\n\nPart C - Mark (X /5)\n-----------------------------\nUse of if and loop statements:\n\nline 10 to validate ...\nline 14 to iterate (for loop) ...\n\nfor loops used on:\nline 43 to draw aliens\nline 70 to draw bonus pickups\n\nuse of do while loop on:\nline 90 to keep the program going (resetting)\n\nPart D - Mark (x /5)\n-----------------------------\nWorking game with inclusion of bespoke methods in the main sketch.\n\nbespoke method:\n\nMethod1() on line x to ...\nMethod2() on line y to ...\nMethod3() on line z to ...\n...\n\n\nPart E1 - Mark (x /10)\n-----------------------------\nUser-defined class with appropriate fields, constructors, getters, setters\n\nline 97 class named Q\nline 97 class named R\n...\n\n\nPart E2 - Mark (x /15)\n-----------------------------\n\nClass bespoke methods:\n\nMethod1() on line x to ...\nMethod2() on line y to ...\nMethod3() on line z to ...\n...\n\n\nPart E3 - Mark (x /10)\n-----------------------------\n\nThe user-defined class(es) are used in an appropriate manner\n\n<just a mark needed here>\n\n\n\nPart F1 - Mark (x /20)\n-----------------------------\n- Use of a data structure to store information i.e. array\n\ndelcared on line...to ...\ninitialized on line... \nused on line...\n...\n\nPart F2 - Mark (x /20)\n-----------------------------\n- Calculations performed on the information stored\n\nline X\n...\n\n\n*/\n~~~\n\n\n##Video\n\n\nYou must include a video (screen recording) [max 10 mins] to present your assignment.  \nThe video must include audio (microphone).\n\nThere are many software programs that enable you to record the desktop as a video *(for the purposes of this assignment I suggest using an extension for the Chrome Browser called ScreenCastify but you can use any. I've listed some below): *\n \n- ScreenCastify extension for Google Chrome Browser *(free version includes watermark and 10 min max recording)* [Screencastify Explanation video](https://youtu.be/mHFT28dmEu4) \n- OBS\n- Camtasia (PC)\n- ScreenFlow (Mac)\n- SnagIt\n- Jing\n- Quicktime\n\nIf you really can't copy, use your phone on a stand (not hand held).\n\nYou will need to upload your video to YouTube as unlisted. Copy the URL and include in the reflection where shown.\n\n![Screencastify share video on YouTube](img/screencastify.png)\n\nWARNING: Allow plenty of time to do your Reflection, make your video, and upload it to YouTube especially if you're broadband is slow.\n\n\n\n###Structure of the video:\n\nPart | Description | Duration     \n-----|-------------|----------------|\n**Intro** | Describing the game  | (<0.5 min) \n**Demo** | Showing the game running highlighting all the features that you want considered for marking. | (<3 mins)\n**Code Walkthrough** | Highlight the key classes/methods/elements in your code to demonstrate your understanding of the work being presented. If parts are not working highlight them also. | (<6.5 mins)\n\n\n\n"
    }
  
  ]
  }

